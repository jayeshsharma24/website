pipeline {
    agent any
    tools {
        jdk "JDK21"
        maven "MAVEN3.9"
    }
    environment {
        // Define your Trivy scan report location
        TRIVY_REPORT = "trivy-report.json"
        WAR_FILE = "target/website-v2.war" // Path to your WAR file
    }
    stages {
        stage('Git checkout') {
            steps {
                git branch: 'web', url: 'https://github.com/jayeshsharma24/website.git'
            }
        }
        stage('Build') {
            steps {
                sh """
                    echo '--------------------building stage--------------------'
                                   """
                sh 'mvn clean install -DskipTests'
            }
            post {
                success {
                    echo 'Now Archiving...'
                    archiveArtifacts artifacts: '**/target/*.war'
                }
            }
        

            }

        stage('Trivy Scan - WAR File') {
            steps {
                script {
                    // Run Trivy scan on the WAR file
                    sh "trivy fs --format json --output ${TRIVY_REPORT} ${WAR_FILE}"

                    // Optional: Print the Trivy scan report to the console
                    sh "cat ${TRIVY_REPORT}"

                    // Read the scan report
                    def scanReport = readJSON file: "${TRIVY_REPORT}"

                    // Check if vulnerabilities are found but don't fail the build
                    if (scanReport.vulnerabilities) {
                        echo "Vulnerabilities found in ${WAR_FILE}. Check the Trivy report for details."
                    } else {
                        echo "No vulnerabilities found in ${WAR_FILE}."
                    }
                }
            }
        }
      stage('third-stage') {
            steps {
                sh """
                    echo 'third stage stage'
                """
            }
        }
        stage('fourth-stage') {
            steps {
                sh """
                    echo ''
                """
            }
        }
    }
}
